id: learning_sweeper
label: Sweeper
category: '[learning]'

templates:
  imports: import learning
  callbacks:
  - start_sweep()
  - stop_sweep()
  - set_error_count(${errors})
  make: learning.sweeper(self, ${snrs}, ${error_threshold}, ${ber_id_1}, ${ber_id_2}, ${probe_id_1}, ${probe_id_2}, self.set_${snr_var})


#  Make one 'parameters' list entry for every parameter you want settable from the GUI.
#     Keys include:
#     * id (makes the value accessible as \$keyname, e.g. in the make entry)
#     * label (label shown in the GUI)
#     * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
parameters:
- id: snr_var
  label: SNR control variable
  dtype: raw
- id: snrs
  label: SNR sweep array
  dtype: float_vector
- id: errors
  label: Error (trigger)
  dtype: int
  default: '0'
- id: error_threshold
  label: Error threshold
  dtype: int
  default: '100'
- id: ber_id_1
  label: BER block id
  dtype: string
- id: ber_id_2
  label: BER block id
  dtype: string
- id: probe_id_1
  label: Probe block id
  dtype: string
- id: probe_id_2
  label: Probe block id
  dtype: string

outputs:
-   domain: stream
    dtype: float
    vlen: ${ len(snrs) }
-   domain: stream
    dtype: float
    vlen: ${ len(snrs) }

#  'file_format' specifies the version of the GRC yml format used in the file
#  and should usually not be changed.
file_format: 1
